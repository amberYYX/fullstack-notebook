{"version":3,"sources":["components/Note.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","content","onClick","request","axios","get","nonExisting","id","date","then","response","data","concat","newObject","post","put","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","Notification","message","className","map","i","key","find","n","changeNote","returnNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","Date","toISOString","Math","random","length","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"kOAaeA,EAXF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UAAY,qBAAuB,iBAEtD,OACE,4BACGH,EAAKI,QACN,4BAAQC,QAASJ,GAAmBC,KCqB3B,EAxBA,WACb,IAAMI,EAAUC,IAAMC,IAHR,cAKRC,EAAc,CAClBC,GAAI,IACJN,QAAS,mCACTO,KAAM,4BACNR,WAAW,GAIb,OAAOG,EAAQM,MAAK,SAACC,GAAD,OAAcA,EAASC,KAAKC,OAAON,OAa1C,EAVA,SAACO,GAEd,OADgBT,IAAMU,KAjBR,aAiBsBD,GACrBJ,MAAK,SAACC,GAAD,OAAcA,EAASC,SAQ9B,EALA,SAACJ,EAAIM,GAElB,OADgBT,IAAMW,IAAN,UAtBF,aAsBE,YAAwBR,GAAMM,GAC/BJ,MAAK,SAACC,GAAD,OAAcA,EAASC,SCnBvCK,G,MAAS,WAOb,OACE,yBAAKC,MAPa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,KAKR,6BACA,kEAyISC,EApIH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,IAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGcJ,oBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,OAMwBN,mBAAS,MANjC,mBAMTO,EANS,KAMKC,EANL,KAsBhBC,qBAAU,WACRC,IAAqBvB,MAAK,SAACwB,GACzBT,EAASS,QAEV,IAEH,IAgCMC,EAAcP,EAAUJ,EAAQA,EAAMY,QAAO,SAACtC,GAAD,OAAUA,EAAKG,aAmC5DoC,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAGF,yBAAKC,UAAU,SAASD,IAGjC,OACE,6BACE,wBAAIC,UAAU,QAAd,SACA,kBAACF,EAAD,CAAcE,UAAU,QAAQD,QAASR,IAEzC,6BACE,4BAAQ3B,QAAS,kBAAM0B,GAAYD,KAAnC,QACQA,EAAU,YAAc,QAGlC,4BACGO,EAAYK,KAAI,SAAC1C,EAAM2C,GAAP,OACf,kBAAC,EAAD,CACEC,IAAKD,EACL3C,KAAMA,EACNC,iBAAkB,kBAxDD,SAACS,GAK1B,IAAMV,EAAO0B,EAAMmB,MAAK,SAACC,GAAD,OAAOA,EAAEpC,KAAOA,KAClCqC,EAAU,2BAAQ/C,GAAR,IAAcG,WAAYH,EAAKG,YAM/CgC,EACUzB,EAAIqC,GACXnC,MAAK,SAACoC,GACLrB,EAASD,EAAMgB,KAAI,SAAC1C,GAAD,OAAWA,EAAKU,KAAOA,EAAKV,EAAOgD,SAEvDC,OAAM,SAACC,GAENjB,EAAgB,SAAD,OACJjC,EAAKI,QADD,sCAGf+C,YAAW,WACTlB,EAAgB,QACf,KACHN,EAASD,EAAMY,QAAO,SAACQ,GAAD,OAAOA,EAAEpC,KAAOA,SA+BV0C,CAAmBpD,EAAKU,WAItD,0BAAM2C,SA9FM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjBpD,QAASwB,EACTjB,MAAM,IAAI8C,MAAOC,cACjBvD,UAAWwD,KAAKC,SAAW,GAC3BlD,GAAIgB,EAAMmC,OAAS,GAWrB1B,EAAmBqB,GAAY5C,MAAK,SAACoC,GACnCrB,EAASD,EAAMX,OAAOiC,IACtBnB,EAAW,SA4ET,2BAAOiC,MAAOlC,EAASmC,SAnEJ,SAACT,GACxBzB,EAAWyB,EAAMU,OAAOF,UAmEpB,4BAAQG,KAAK,UAAb,SAGF,kBAAC,EAAD,QCjJNC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.8525d21f.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important ? \"make not important\" : \"make important\";\n\n  return (\n    <li>\n      {note.content}\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  );\n};\n\nexport default Note;\n","import axios from \"axios\";\n// const baseUrl = \"http://localhost:3002/api/notes\";\n// const baseUrl = \"https://note-reminder.herokuapp.com/api/notes\"; //Keroku\nconst baseUrl = \"/api/notes\"; //Keroku relative URL\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n\n  const nonExisting = {\n    id: 1000,\n    content: \"this note is not saved to server\",\n    date: \"2020-09-10T 11:12:30.098Z\",\n    important: true,\n  };\n\n  //   return request.then((response) => response.data.concat(nonExisting));\n  return request.then((response) => response.data.concat(nonExisting));\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nexport default { getAll, create, update };\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Note from \"./components/Note\";\n\nimport noteService from \"./services/notes\";\nimport \"./index.css\";\n\nconst Footer = () => {\n  const footerStyle = {\n    color: \"green\",\n    fontStyle: \"italic\",\n    fontSize: 16,\n  };\n\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Note app, Developed by Amber Y.</em>\n    </div>\n  );\n};\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState(\"\");\n  const [showAll, setShowAll] = useState(true);\n\n  // const [errorMessage, setErrorMessage] = useState(\"some error happened...\");\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  // useEffect(() => {\n  //   axios\n  //   .get(\"http://localhost:3001/notes\")\n  //   .then((response) => {\n  //     setNotes(response.data);\n  //   });\n  // }, []);\n\n  // useEffect(() => {\n  //   noteService.getAll().then((response) => {\n  //     setNotes(response.data);\n  //   });\n  // }, []);\n\n  useEffect(() => {\n    noteService.getAll().then((initialNotes) => {\n      setNotes(initialNotes);\n    });\n  }, []);\n\n  const addNote = (event) => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n      id: notes.length + 1,\n    };\n\n    // noteService.create(noteObject).then((response) => {\n    //   //!!!!!!data not date\n    //   // setNotes(notes.concat(response.date));\n    //   // setNewNote(\"\");\n    //   setNotes(notes.concat(response.data));\n    //   setNewNote(\"\");\n    // });\n\n    noteService.create(noteObject).then((returnNote) => {\n      setNotes(notes.concat(returnNote));\n      setNewNote(\"\");\n    });\n\n    // axios.post(\"http://localhost:3001/notes\", noteObject).then((response) => {\n    //   setNotes(notes.concat(response.data));\n    //   setNewNote(\"\");\n    // });\n  };\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value);\n  };\n\n  const notesToShow = showAll ? notes : notes.filter((note) => note.important);\n\n  const toggleImportanceOf = (id) => {\n    // console.log('importance of ' + id + ' need to be toggled')\n    // a better way to express.\n    // console.log(`importance of ${id} need to be toggled`);\n    // const url = `http://localhost:3001/notes/${id}`;\n    const note = notes.find((n) => n.id === id);\n    const changeNote = { ...note, important: !note.important };\n\n    // noteService.update(id, changeNote).then((responce) => {\n    //   setNotes(notes.map((note) => (note.id !== id ? note : responce.data)));\n    // });\n\n    noteService\n      .update(id, changeNote)\n      .then((returnNote) => {\n        setNotes(notes.map((note) => (note.id !== id ? note : returnNote)));\n      })\n      .catch((error) => {\n        // alert(`the note ${note.content} was already deleted from server`);\n        setErrorMessage(\n          `Note '${note.content}' was already removed from server`\n        );\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000);\n        setNotes(notes.filter((n) => n.id !== id)); //filter函数可以看成是一个过滤函数，返回符合条件的元素的数组\n      });\n\n    // axios.put(url, changeNote).then((responce) => {\n    //   setNotes(notes.map((note) => (note.id !== id ? note : responce.data)));\n    // });\n  };\n\n  const Notification = ({ message }) => {\n    if (message === null) {\n      return null;\n    }\n\n    return <div className=\"error\">{message}</div>;\n  };\n\n  return (\n    <div>\n      <h1 className=\"note\">Notes</h1>\n      <Notification className=\"error\" message={errorMessage}></Notification>\n\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? \"important\" : \"all\"}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note, i) => (\n          <Note\n            key={i}\n            note={note}\n            toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        ))}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">save</button>\n      </form>\n\n      <Footer></Footer>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}